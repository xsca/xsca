// Code generated by cmd/cgo; DO NOT EDIT.

//line /data/repo/go/src/bitbucket.org/pwq/vlan/lib/sdk.go:1:1
package sdk

import _ "unsafe"
import (
	"os"

	"github.com/ffip/vlan/entry"
	"github.com/ffip/vlan/config"
	"github.com/ffip/vlan/util"
	"github.com/sirupsen/logrus"
)

var (
	l    *logrus.Logger
	cfg  *config.C
	ctrl *vlan.Control
)

//export vlan_init
func vlan_init(configPath * /*line :20:29*/_Ctype_char /*line :20:35*/, configTest  /*line :20:48*/_Ctype_int /*line :20:53*/)  /*line :20:55*/_Ctype_int /*line :20:60*/ {
	l = logrus.New()
	cfg = config.NewC(l)
	err := cfg.Load(( /*line :23:18*/_Cfunc_GoString /*line :23:27*/)(configPath))
	if err != nil {
		l.WithError(err).Error("Failed to load config file")
		return 1
	}

	ctrl, err = entry.Main(cfg, uint(configTest) == 1, "1.13.22.LTS.LIB", l, nil)
	if err != nil {
		caution.LogWithContextIfNeeded("Failed to start", err, l)
		return 1
	}

	if uint(configTest) == 1 {
		os.Exit(0)
	}

	return 0
}

//export vlan_start
func vlan_start() {
	ctrl.Start()
}

//export vlan_reload
func vlan_reload() {
	cfg.ReloadConfig()
}

//export vlan_stop
func vlan_stop() {
	ctrl.Stop()
}
